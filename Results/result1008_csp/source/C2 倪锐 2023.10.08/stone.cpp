#include<bits/stdc++.h>#define mod 1000000007#define re register#define int long long#define rep(i,a,b) for(int i(a);i<=(b);++i)#define req(i,a,b) for(int i(a);i>=(b);--i)using namespace std;char buf[1<<23],*p1=buf,*p2=buf,ubuf[1<<23],*u=ubuf;#define getchar() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)template<typename TP> inline TP read(TP &num){	re TP x=0;re int f=0;re char ch=getchar();	while(ch<48||ch>57) f|=ch=='-',ch=getchar();	while(48<=ch&&ch<=57) x=(x<<1)+(x<<3)+(ch^48),ch=getchar();	return num=f?-x:x;}template<typename TP> inline void write(TP x){	(x<0)?(putchar('-'),x=-x):0;    (x>9)?(write(x/10),0):0;	putchar((x%10)^48);}template<typename TP> inline void writeln(TP x){	write<TP>(x);	puts("");}int n,m,a[101],ans,res;inline bool cant(){	rep(i,1,n) if(a[i]==i) return 0;	return 1;}inline int sum(){	int ret=0;	rep(i,1,n) ret+=a[i];	return ret;}void solve(){	if(cant()) return res=min(res,sum()),void();	rep(i,1,n) if(a[i]==i)	{		int b[101];		memcpy(b,a,sizeof a);		rep(j,1,i-1) ++a[j];		a[i]=0;		solve();		memcpy(a,b,sizeof b);	}	if(cant()) return res=min(res,sum()),void();}signed main(){	freopen("stone.in","r",stdin);	freopen("stone.out","w",stdout);	read(n);read(m);	rep(i,0,m)	{		res=0x7fffffff;		rep(_,1,n) a[_]=i;		solve();		ans+=res;		ans%=mod;	}	cout<<ans<<endl;	return 0; }